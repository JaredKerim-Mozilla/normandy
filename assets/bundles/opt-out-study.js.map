{"version":3,"file":"opt-out-study.js","sources":["webpack:///webpack/bootstrap","webpack:///./client/actions/opt-out-study/index.js","webpack:///./client/actions/utils.js","webpack:///(webpack)/buildin/global.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./client/actions/opt-out-study/index.js\");\n","import { Action, registerAction, registerAsyncCallback } from '../utils';\n\nconst SHIELD_OPT_OUT_PREF = 'app.shield.optoutstudies.enabled';\n\nlet seenRecipeIds = [];\n\n/**\n * Enrolls a user in an opt-out study, in which we install an add-on which\n * manages branch selection, changes to Firefox, etc.\n */\nexport default class OptOutStudyAction extends Action {\n  async execute() {\n    const recipeId = this.recipe.id;\n    const {\n      name, description, addonUrl, isEnrollmentPaused,\n    } = this.recipe.arguments;\n    const { preferences, studies } = this.normandy;\n\n    // Exit early if we're on an incompatible client.\n    if (studies === undefined) {\n      this.normandy.log('Client does not support studies, aborting.', 'info');\n      return;\n    }\n\n    // Check opt-out preference\n    if (preferences && !preferences.getBool(SHIELD_OPT_OUT_PREF, false)) {\n      this.normandy.log('User has opted-out of opt-out experiments, aborting.', 'info');\n      return;\n    }\n\n    seenRecipeIds.push(recipeId);\n\n    const hasStudy = await studies.has(recipeId);\n    if (isEnrollmentPaused) {\n      this.normandy.log(`Enrollment is paused for recipe ${recipeId}`, 'debug');\n    } else if (hasStudy) {\n      this.normandy.log(`Study for recipe ${recipeId} already exists`, 'debug');\n    } else {\n      this.normandy.log(`Starting study for recipe ${recipeId}`, 'debug');\n      await studies.start({\n        recipeId,\n        name,\n        description,\n        addonUrl,\n      });\n    }\n  }\n}\nregisterAction('opt-out-study', OptOutStudyAction);\n\n/**\n * Finds active studies that were not stored in the seenRecipeIds list during\n * action execution, and stops them.\n */\nexport async function postExecutionHook(normandy) {\n  const { studies } = normandy;\n\n  // Exit early if we're on an incompatible client.\n  if (studies === undefined) {\n    normandy.log('Client does not support studies, aborting.', 'info');\n    return;\n  }\n\n  // If any of the active studies were not seen during a run, stop them.\n  const activeStudies = (await studies.getAll()).filter(study => study.active);\n  for (const study of activeStudies) {\n    if (!seenRecipeIds.includes(study.recipeId)) {\n      normandy.log(`Stopping study for recipe ${study.recipeId}.`, 'debug');\n      try {\n        await studies.stop(study.recipeId, 'recipe-not-seen');\n      } catch (err) {\n        normandy.log(`Error while stopping study for recipe ${study.recipeId}: ${err}`, 'error');\n      }\n    }\n  }\n}\nregisterAsyncCallback('postExecution', postExecutionHook);\n","export class Action {\n  constructor(normandy, recipe) {\n    this.normandy = normandy;\n    this.recipe = recipe;\n  }\n}\n\n// Attempt to find the global registerAction, and fall back to a noop if it's\n// not available.\nexport const registerAction = (\n  (global && global.registerAction)\n  || (window && window.registerAction)\n  || function registerAction() {}\n);\n\n// Same as above, for registerAsyncCallback\nexport const registerAsyncCallback = (\n  (global && global.registerAsyncCallback)\n  || (window && window.registerAsyncCallback)\n  || function registerAsyncCallback() {}\n);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;A","sourceRoot":""}